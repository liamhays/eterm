// 5x7 pixel font, based on https://github.com/petabyt/font with some
// modifications.

// better hashmap for this purpose, it lets you compile at build time
use phf::phf_map;

// in ascii order
pub static ETERM_FONT: phf::Map<char, &'static [u8; 7]> = phf_map! {
    ' ' => &[
	0b00000,
	0b00000,
	0b00000,
	0b00000,
	0b00000,
	0b00000,
	0b00000,
    ],
    
    '!' => &[
	0b10000,
	0b10000,
	0b10000,
	0b10000,
	0b10000,
	0b00000,
	0b10000,
    ],

    '"' => &[
	0b10100,
	0b10100,
	0b10100,
	0b00000,
	0b00000,
	0b00000,
	0b00000,
    ],

    '#' => &[
	0b01010,
	0b01010,
	0b11111,
	0b01010,
	0b11111,
	0b01010,
	0b01010,
    ],
    
    '$' => &[
	0b00100,
	0b01110,
	0b10100,
	0b01110,
	0b00101,
	0b01110,
	0b00100,
    ],

    '%' => &[
	0b00001,
	0b01001,
	0b00010,
	0b00100,
	0b01000,
	0b10010,
	0b10000,
    ],

    //('&
    // get to do this ourselves too

    '\'' => &[
	0b10000,
	0b10000,
	0b10000,
	0b00000,
	0b00000,
	0b00000,
	0b00000,
    ],

    '(' => &[
	0b00100,
	0b01000,
	0b10000,
	0b10000,
	0b10000,
	0b01000,
	0b00100,
    ],

    ')' => &[
	0b10000,
	0b01000,
	0b00100,
	0b00100,
	0b00100,
	0b01000,
	0b10000,
    ],

    '*' => &[
	0b00100,
	0b01110,
	0b00100,
	0b01010,
	0b00000,
	0b00000,
	0b00000,
    ],

    '+' => &[
	0b00000,
	0b00100,
	0b00100,
	0b11111,
	0b00100,
	0b00100,
	0b00000,
    ],

    ',' => &[
	0b00000,
	0b00000,
	0b00000,
	0b00000,
	0b00000,
	0b00100,
	0b01000,
    ],

    '-' => &[
	0b00000,
	0b00000,
	0b00000,
	0b01110,
	0b00000,
	0b00000,
	0b00000,
    ],

    '.' => &[
	0b00000,
	0b00000,
	0b00000,
	0b00000,
	0b00000,
	0b00000,
	0b00100,
    ],

    '/' => &[
	0b00001,
	0b00001,
	0b00010,
	0b00100,
	0b01000,
	0b10000,
	0b10000,
    ],

    '0' => &[
	0b01110,
	0b10001,
	0b10011,
	0b10101,
	0b11001,
	0b10001,
	0b01110
    ],

    '1' => &[
	0b11000,
	0b01000,
	0b01000,
	0b01000,
	0b01000,
	0b01000,
	0b01000,
    ],

    '2' => &[
	0b01110,
	0b10001,
	0b00001,
	0b00110,
	0b01000,
	0b10000,
	0b11111,
    ],

    '3' => &[
	0b11110,
	0b00001,
	0b00001,
	0b01110,
	0b00001,
	0b00001,
	0b11110,
    ],

    '4' => &[
	0b10001,
	0b10001,
	0b10001,
	0b11111,
	0b00001,
	0b00001,
	0b00001,
    ],

    '5' => &[
	0b11111,
	0b10000,
	0b10000,
	0b11110,
	0b00001,
	0b00001,
	0b11110,
    ],

    '6' => &[
	0b01100,
	0b10000,
	0b10000,
	0b11110,
	0b10001,
	0b10001,
	0b01110,
    ],

    '7' => &[
	0b11111,
	0b00001,
	0b00001,
	0b00110,
	0b01000,
	0b01000,
	0b01000,
    ],

    '8' => &[
	0b01110,
	0b10001,
	0b10001,
	0b01110,
	0b10001,
	0b10001,
	0b01110,
    ],

    '9' => &[
	0b01110,
	0b10001,
	0b10001,
	0b01111,
	0b00001,
	0b00001,
	0b01110,
    ],

    ':' => &[
	0b00000,
	0b01000,
	0b00000,
	0b00000,
	0b01000,
	0b00000,
	0b00000,
    ],

    '<' => &[
	0b00010,
	0b00100,
	0b01000,
	0b10000,
	0b01000,
	0b00100,
	0b00010,
    ],

    '=' => &[
	0b00000,
	0b11111,
	0b00000,
	0b00000,
	0b11111,
	0b00000,
	0b00000,
    ],

    '>' => &[
	0b01000,
	0b00100,
	0b00010,
	0b00001,
	0b00010,
	0b00100,
	0b01000,
    ],

    '?' => &[
	0b01100,
	0b10010,
	0b00010,
	0b00100,
	0b01000,
	0b00000,
	0b01000,
    ],

    // need to do @ symbol

    'A' => &[
	0b01110,
	0b10001,
	0b10001,
	0b11111,
	0b10001,
	0b10001,
	0b10001,
    ],

    'B' => &[
	0b11110,
	0b10001,
	0b10001,
	0b11110,
	0b10001,
	0b10001,
	0b11110,
    ],

    'C' => &[
	0b01111,
	0b10000,
	0b10000,
	0b10000,
	0b10000,
	0b10000,
	0b01111,
    ],

    'D' => &[
	0b11110,
	0b10001,
	0b10001,
	0b10001,
	0b10001,
	0b10001,
	0b11110,
    ],

    'E' => &[
	0b11111,
	0b10000,
	0b10000,
	0b11111,
	0b10000,
	0b10000,
	0b11111,
    ],

    'F' => &[
	0b11111,
	0b10000,
	0b10000,
	0b11111,
	0b10000,
	0b10000,
	0b10000,
    ],

    'G' => &[
	0b01111,
	0b10000,
	0b10000,
	0b10011,
	0b10001,
	0b10001,
	0b01111,
    ],

    'H' => &[
	0b10001,
	0b10001,
	0b10001,
	0b11111,
	0b10001,
	0b10001,
	0b10001,
    ],

    'I' => &[
	0b11111,
	0b00100,
	0b00100,
	0b00100,
	0b00100,
	0b00100,
	0b11111,
    ],
    
    'J' => &[
	0b00001,
	0b00001,
	0b00001,
	0b00001,
	0b00001,
	0b00001,
	0b11111,
    ],

    'K' => &[
	0b10001,
	0b10010,
	0b10100,
	0b11000,
	0b10100,
	0b10010,
	0b10001,
    ],

    'L' => &[
	0b10000,
	0b10000,
	0b10000,
	0b10000,
	0b10000,
	0b10000,
	0b11111,
    ],

    'M' => &[
	0b10001,
	0b11011,
	0b10101,
	0b10001,
	0b10001,
	0b10001,
	0b10001,
    ],
	
	
    'N' => &[
	0b10001,
	0b11001,
	0b10101,
	0b10011,
	0b10001,
	0b10001,
	0b10001,
    ],

    'O' => &[
	0b01110,
	0b10001,
	0b10001,
	0b10001,
	0b10001,
	0b10001,
	0b01110,
    ],

    'P' => &[
	0b11110,
	0b10001,
	0b10001,
	0b11110,
	0b10000,
	0b10000,
	0b10000,
    ],

    'Q' => &[
	0b01110,
	0b10001,
	0b10001,
	0b10001,
	0b10001,
	0b10011,
	0b01111,
    ],

    'R' => &[
	0b11110,
	0b10001,
	0b10001,
	0b11110,
	0b10001,
	0b10001,
	0b10001,
    ],

    'S' => &[
	0b01111,
	0b10000,
	0b10000,
	0b01110,
	0b00001,
	0b00001,
	0b11110,
    ],

    'T' => &[
	0b11111,
	0b00100,
	0b00100,
	0b00100,
	0b00100,
	0b00100,
	0b00100,
	0b00100,
    ],

    'U' => &[
	0b10001,
	0b10001,
	0b10001,
	0b10001,
	0b10001,
	0b10001,
	0b01110,
    ],

    'V' => &[
	0b10001,
	0b10001,
	0b10001,
	0b10001,
	0b10001,
	0b01010,
	0b00100,
    ],

    'W' => &[
	0b10001,
	0b10001,
	0b10001,
	0b10001,
	0b10101,
	0b11011,
	0b10001,
    ],

    'X' => &[
	0b10001,
	0b10001,
	0b01010,
	0b00100,
	0b01010,
	0b10001,
	0b10001,
    ],

    'Y' => &[
	0b10001,
	0b10001,
	0b10001,
	0b01110,
	0b00100,
	0b00100,
	0b00100,
    ],

    'Z' => &[
	0b11111,
	0b00001,
	0b00010,
	0b00100,
	0b01000,
	0b10000,
	0b11111,
    ],

    // continuing with ASCII, some of the symbols after the capitals

    '[' => &[
	0b11111,
	0b10000,
	0b10000,
	0b10000,
	0b10000,
	0b10000,
	0b11111,
    ],

    //'\\' => &[
    // TODO: see above

    ']' => &[
	0b11111,
	0b00001,
	0b00001,
	0b00001,
	0b00001,
	0b00001,
	0b11111,
    ],

    // TODO:
    //'^' => &[


    '_' => &[
	0b00000,
	0b00000,
	0b00000,
	0b00000,
	0b00000,
	0b00000,
	0b11111,
    ],

    '`' => &[
	0b10000,
	0b01000,
	0b00100,
	0b00000,
	0b00000,
	0b00000,
	0b00000,
    ],

    // on to lowercase letters!

    'a' => &[
	0b00000,
	0b00000,
	0b01110,
	0b00001,
	0b01111,
	0b10001,
	0b01111,
    ],

    'b' => &[
	0b10000,
	0b10000,
	0b10000,
	0b11110,
	0b10001,
	0b10001,
	0b11110,
    ],

    'c' => &[
	0b00000,
	0b00000,
	0b00000,
	0b01110,
	0b10000,
	0b10000,
	0b01110,
    ],

    'd' => &[
	0b00001,
	0b00001,
	0b01111,
	0b10001,
	0b10001,
	0b10001,
	0b01111,
    ],

    'e' => &[
	0b00000,
	0b00000,
	0b01110,
	0b10001,
	0b11111,
	0b10000,
	0b01111,
    ],

    'f' => &[
	0b00110,
	0b01001,
	0b01000,
	0b11100,
	0b01000,
	0b01000,
	0b01000,
    ],

    'g' => &[
	0b00000,
	0b01111,
	0b10001,
	0b10001,
	0b01111,
	0b00001,
	0b11110,
    ],

    'h' => &[
	0b10000,
	0b10000,
	0b11110,
	0b10001,
	0b10001,
	0b10001,
	0b10001,
    ],

    'i' => &[
	0b00100,
	0b00000,
	0b11100,
	0b00100,
	0b00100,
	0b00100,
	0b11111,
    ],

    'j' => &[
	0b00001,
	0b00000,
	0b00011,
	0b00001,
	0b00001,
	0b10001,
	0b01110,
    ],

    'k' => &[
	0b10000,
	0b10000,
	0b10001,
	0b10010,
	0b11100,
	0b10010,
	0b10001,
    ],

    'l' => &[
	0b11100,
	0b00100,
	0b00100,
	0b00100,
	0b00100,
	0b00100,
	0b00111,
    ],

    'm' => &[
	0b00000,
	0b00000,
	0b11110,
	0b10101,
	0b10101,
	0b10101,
	0b10101,
    ],

    'n' => &[
	0b00000,
	0b00000,
	0b11110,
	0b10001,
	0b10001,
	0b10001,
	0b10001
    ],

    'o' => &[
	0b00000,
	0b00000,
	0b01110,
	0b10001,
	0b10001,
	0b10001,
	0b01110,
    ],

    'p' => &[
	0b00000,
	0b00000,
	0b01110,
	0b01001,
	0b01110,
	0b01000,
	0b01000,
    ],

    'q' => &[
	0b00000,
	0b00111,
	0b01001,
	0b01001,
	0b00111,
	0b00001,
	0b00001,
    ],

    'r' => &[
	0b00000,
	0b00000,
	0b10111,
	0b11000,
	0b10000,
	0b10000,
	0b10000,
    ],

    's' => &[
	0b00000,
	0b00000,
	0b01111,
	0b10000,
	0b01110,
	0b00001,
	0b11110,
    ],

    't' => &[
	0b01000,
	0b01000,
	0b11100,
	0b01000,
	0b01000,
	0b01000,
	0b00110,
    ],

    'u' => &[
	0b00000,
	0b00000,
	0b10001,
	0b10001,
	0b10001,
	0b10001,
	0b01110,
    ],

    'v' => &[
	0b00000,
	0b00000,
	0b10001,
	0b10001,
	0b10001,
	0b01010,
	0b00100,
    ],

    'w' => &[
	0b00000,
	0b00000,
	0b10001,
	0b10001,
	0b10101,
	0b10101,
	0b01010,
    ],

    'x' => &[
	0b00000,
	0b00000,
	0b10001,
	0b01010,
	0b00100,
	0b01010,
	0b10001,
    ],

    'y' => &[
	0b00000,
	0b00000,
	0b10001,
	0b10001,
	0b01111,
	0b00001,
	0b11110,
    ],

    'z' => &[
	0b00000,
	0b00000,
	0b11111,
	0b00010,
	0b00100,
	0b01000,
	0b11111,
    ],

    // couple more symbols
    '{' => &[
	0b00100,
	0b01000,
	0b01000,
	0b10000,
	0b01000,
	0b01000,
	0b00100,
    ],

    '|' => &[
	0b00100,
	0b00100,
	0b00100,
	0b00100,
	0b00100,
	0b00100,
	0b00100,
    ],

    '}' => &[
	0b10000,
	0b01000,
	0b01000,
	0b00100,
	0b01000,
	0b01000,
	0b10000,
    ],

    '~' => &[
	0b00000,
	0b00000,
	0b10101,
	0b01010,
	0b00000,
	0b00000,
	0b00000,
    ],
    
};




